version: '3.5'

services:

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command:
      [
        "sh",
        "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - openshift-tollmicroservice-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
      ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - openshift-tollmicroservice-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: openshiftdb
    ports:
      - "5432:5432"
    networks:
      - openshift-tollmicroservice-network
    # volumes:
    #   - ./pg_data:/var/lib/postgresql/data

  receiver:
    image: openshift/obu-receiver:1.0
    build:
      context: receiver
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_CLIENT_ID: obu-producer
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: obu-topic
      WS_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - openshift-tollmicroservice-network

  distance_calculator:
    image: openshift/obu-distance_calculator:1.0
    build:
      context: distance_calculator
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - storer
    environment:
      KAFKA_CLIENT_ID: obu-producer
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: obu-topic
      GRPC_HOST: storer
      GRPC_PORT: 50051
    networks:
      - openshift-tollmicroservice-network

  storer:
    image: openshift/obu-storer:1.0
    build:
      context: storer
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:mypassword@postgres:5432/openshiftdb
      GRPC_HOST: storer
      GRPC_PORT: 50051
    networks:
      - openshift-tollmicroservice-network

  gateway:
    image: openshift/obu-gateway:1.0
    build:
      context: gateway
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:mypassword@postgres:5432/openshiftdb
    ports:
      - "8081:8081"
    networks:
      - openshift-tollmicroservice-network
    # producer:
    #   image: quarkus-quickstarts/kafka-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}
    #   build:
    #     context: producer
    #     dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    #   depends_on:
    #     - kafka
    #   environment:
    #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    #   ports:
    #     - "8080:8080"
    #   networks:
    #     - openshift-tollmicroservice-network
    # processor:
    #   image: quarkus-quickstarts/kafka-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}
    #   build:
    #     context: processor
    #     dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    #   depends_on:
    #     - kafka
    #   environment:
    #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    #   networks:
    #     - openshift-tollmicroservice-network

networks:
  openshift-tollmicroservice-network:
    name: openshifttollmicrcroshiftnetwork
